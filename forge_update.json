{
    "1.11.2": {
        "rv5-alpha-0": "Ported to 1.11.2\nFixed Facade Rendering\nFixed Slab lighting\nFixed itemstacks with serialisable caps being stored (e.g. Botania flower bag)\nAdded back OpenComputers integration\nAdded integrated OC drivers\nFixed some minor bugs.",
        "rv5-alpha-1": "72fb550 update display name and filenames to better communicate this is a fork\nc1a1dd7 fix missing IC2 layer to make eu tunnel work again\na67ae19 temp fix for interface names. Member name clash between AE's interface and IWorldNameable on hasCustomName\n6e41ab2 disabled AE's iron nugget as it is now redundant\n4434fc4 disable old recipe file integrations for mods that never made it out of 1.7\ne63725d Refactor ICustomNameObject to prevent clash with MCP name\nbca4239 MCP!\nf302860 MCP\n065c7f8 allow storage cells to be disassembled in the offhand\n4cd0f01 remove AE item hiding (e.g. gold and iron dust) when another mod has the same items. Could cause problems down the 1.12 track. Also stops recipe warnings because it can't find the item\n7986e4d make gui items work in the off hand\n4dc6cbe add basic forge update file and a generator task. Update mod name to include my name to make it clear what version people are using\ne336f91 bump version in prep for next release\nebe9779 add updateJSON param to @mod too\n27cb02e refresh COFH api to use extracted version from 1.11 cofhcore jar. adds full API\n4402326 lowercases cofhapi ids for integration so we only use the official ones\n585f3df add buildcraft and cofh hammer support as integration modules. Includes PartPlacement changes which will need testing\n28369e3 fix NPE from hitVec trying to create a copy",
        "rv5-alpha-2": "72384e2 Forge Energy Tunnel. Based on the RF tunnel. Does not cache the Energy handler as caps aren't meant to be cached.\n27f5752 missed registering sky chest tile\nf8221ef fix a couple more MCP mapping update errors\n1a8d1d3 reimplement villager trading\n7ace55a add new AEFeature for adding presses to villager trades, as level 2 trades. Allows for people who hate the meteors with a passion. Probably needs rebalance regarding emerald cost.\n267e3b3 fix some cases where AEItemStack was using ItemStack representation to compare or query things by using getDisplayStack instead\n8f3f1aa Separate out the IFMLLoadingPlugin implementation, for Sponge compat\ndc4eb81 Major IModel/IBakedModel refactor.\n0ff074d fix coremod test\n6845172 fix buildcraft calling onBlockAdded with a fake world before the server has started\n955502f add version check test\n5913f7d actually fix the BC error\nefbfe33 ItemHandlerAdapter - add ability to selectively send differences in this onTick call, so that any extra changes (e.g. compacting drawers) get picked up the next tick and not ignored by the network monitor.\n56b016f Fix Pattern Terminal pattern output item disappearing when using it to craft\nbee0e84 fix broken JEI packet handling which eats items in the pattern terminal if an exact match isn't found with the found recipe pattern item. Closes #7\n71c9559 Fix Condenser fluid inventory to actually report 10 buckets like the comment says instead of 10 mb\n0137e32 allow item handlers to extract from the Condenser (output slot only)\nb1c2a3c implement IInventory.isEmpty on the base IInventory tile class instead of on every subclass\nd97b94c Fix entities disappearing when transported with Spatial IO\n3b63d43 avoid teleporting log messages by forcibly removing the entity before teleporting it.\nfc9e2f6 allow FacingToRotation to load client side by using standard java vector maths to generate the matrix & add sideonly annotation to only remaining method with client only code\n8fb04ad Insert cells automatically when right clicking on drive front with in hand, and auto remove when shift clicking with empty hand.\nf5fd59f Use log4j2 class directly in the coremod, make the coremod and the main mod class a tad less chatty in default logger configs\n9e6dfee Attempt to limit entities like the code used to do\ndf29e34 Attempt to prevet a null pointer crash in ContainerCraftConfirm\n35e68c9 Add ic2 power accepting support to BasePoweredTiles & move IC2 & RF funcs to AEBasePoweredTile with stripping.\n7a7c81b Bail in network tool if Forge rightclick event says no\n90a9a92 Quartz Wrench - call neighbourChanged correctly\ncc5762a Replace a bunch of FAIL returns to not eat item interctions\n811f193 Fix P2P light tunnel failing on load.\n6b8b58d add some stack overflow protection to the energy grid cache\nc80bf64 Change Item P2P tunnel to use caps.\n16006a7 Force P2P tunnels to sync their DisplayName, should always display when set now.",
        "rv5-alpha-3": "0650a03 update jei plugin to use not deprecated interfaces\nd2e439d properly check for block in facade recipe\n25fc5c8 allow any grid proxyable tile to give TOP its power/channel info as it's server side\nf8c37b1 register primed tiny tnt entity\n3433013 Let ItemHandlerAdapter refresh its provided cap on tick. IItemHandlers are not guaranteed to stay the same.\nc5df2f8 add untested hashing of item cap to Platform.generateTileHash\n8528883 I18n deprecation change\nbd42fc3 refactor ME Gui tooltip code to re-use an unused func and handle colours. Closes #10\n86ab433 let FE tunnel pull from input, and only give out cap if has input/output as relevant. Closes #9\n72a2bf4 fix resource location for tiny tnt\n487dfea name update & set basenames to use MC version\nbd342c4 build a better tile hash",
        "rv5-alpha-5": "e54ac73 copy itemstack before shrinking it. Found by tyra314\nc4607e6 readme update\n9796ba4 readme update\n478cc6b sync all custom tile/part names to the client\nce0cb83 show tile/part custom names in Waila. Also returns IS.EMPTY instead of null in waila handlers\n526de10 make TOP display custom names separate from the item name like waila\nf1704c2 nerf the egg a little",
        "rv5-beta-1": "5be1c53 Made Interface Terminals Tall\nf4c7b9b  Added Search Box Mode Setting to Interface Terminal\n87e4711 1.11 fixes for paperpilot's PR\naa66d69 add safety for unconnected FE tunnel caps\n77d369a fix some attunement ids, add native ability for caps to set attunement for item/fluid/fe tunnels\n8f53444 actually run the preinit for integrations in preinit. Needed so recipe integrations load.\nf17914f readd mekanism integration\n520d92d remove explicit mekanism attunement, it adds it itself\n6a033f2 update mekanism recipes\n7dcbeb9 double the chest's internal buffer so it can accept stacks of items\nb109282 prevent npe in onItemUse in formation planes\n20af69c add option to remember the terminal search\n1c6744f Use ByteBufInputStream instead of ArrayIS on netowrk packets as they may not always be array backed. Fixes #24\n056e4aa add some extra error handling/stupid proofing\na5411ac log when itemhandler throws exception\nef79c25 try to inform the user when the crafting job throws an unhandled exception",
        "rv5-beta-10": "0b32935d8 fix stack size being bigger than can be stored by ItemStack to NBT\nd0f1b95eb fix crank on rotated grindstone with custom rotation\nca6d598c1 tab key for search field accessing\nb6a1da4bc fix derp of testing and then using method that tests the same thing\naa83a1e71 forgot to add WCT container to JEI plugin\n9d5cd7a8a fix GuiMEMonitorable x size to match the texture and avoid JEI overlap\n1f7c7df67 portable cell to bauble\nc9d73e799 show bauble slots on the ME terminal GUIs\n8ddbe10d6 expose a gridnode for the JEI recipe stuff\nbab2ff3b2 only check head slot for terminal in packet\nc529d49e2 make bauble cell work\n2b3638aab disable isidendinv extraction from anything but the output\nb366144dd portable cell auto pickup mode\na6fe27b84 increase portable cell capacity to that with which it is crafter\nb70cd4b7f offhand slot for terminal-based containers\n7f99674f4 fix bauble slots in pattern term\nb6b63d59c fix `Block.getItem` being wrong for charged certus ore\n750e740e3 move offhand slot to the left and combine with baubles when present. All player inv possessing guis should now have the offhand & baubles slots\n3857d21e1 add feature disable-ment to to the WCT and range upgrade\n0133c8350 unify storage cell housing colour\ne0b08845e 256k, 1m, 4m & 16m storage cells for the truly crazy. It's bigger on the inside!\n32e829ec2 fix charged staff api call\nb8351ac22 sort enchanted books by their enchants\n2d88f3e7a refactor keypress packets to one\n043f10ef2 rename keybindings to head/belt\n0c43ea2fd move portable cell to amulet, generify the Bauble handler cap class\n83cab7e95 remove unused class\n8b416c1cb Move translation to the proxy classes to use the client specific one on client and be able to log when translation performed on server in deobf.\n0b8f32bfa missed belt -> amulet enum\n38895d722 basic toolbelt!\n04418ffbd add power requirements to toolbelt swapping\nd8a6a21b1 toolbelt model\ndf9cdd898 fix Strong format issues cause by move to client i81n\n3d0115782 fix direct checks for GuiWirelessTerminal not working for crafting terminal\n7ffe1361b errant null stack check in waila provider\n830ddea43 fix wireless terminals crafting guis by passing around the inv slot in the gui/containers\nd5e706e04 change tiny tnt to behave like the vanilla tnt does using the Explosion class\n5fa74462a fix AEItemStack sameOre functions\nf9655280e missed belt to amulet change for portable cell\n56e434938 update button display for item pickup mode when it changes (fix client sync)\n0b63b9803 add sound when belt is swapped\n1b61e37ac toolbelt recipe\n9680e7089 toolbelt lang",
        "rv5-beta-2": "99c4efb fix weird double negative use of isNether\n8eed85e allow fluix transformation for oredicted redstone and quartz because some mods want to add an item to do the same thing -_-\n3b07512 make SlightlyBetterSort instance a static member so it doesnt get created every call\nc7167f6 fix unsafe TE access found by thommy101\n800f49a attempt to make meteorite spawn on the first valid block, top down\nf370e36 rewrite P2P item tunnel to not cache caps, and support output extracting from input\n4a2d65b fix Memory Card changing target when copying settings\nc90a2ff rewrite fluid tunnels to work one way push/pull\n124aefe Send unlocalised descriptions to JEI\n0a808fa add attunement description to JEI to help newbies\nedf1927 add API method to read an AEItemStack back from NBT\n0bb09bf visually clear the search box when changing search modes",
        "rv5-beta-3": "b1352e5 more nonnull item stacks that somehow got missed\n76f05ac dont drop the crank if fake player or null, just fail to add turn. Player may sometimes be null?\n9d02f55 AA compatibility for quartz dust\n3f02e5f add sand to grinder, set grind logging to be INFO level if you turn it on\naf92fac set biome to be based on void, register it as void in the dictionary",
        "rv5-beta-4": "9f5c7cc fix sky compas TE not being registered\nec2f060 Try running inventory actions on a scheduled server tick, rather than in the net handler\n5c680f8 remove inscriber sidedness & properly handle not resetting state when only the item counts have changed\n266e7b2 properly fix handling of multiple stackSize in inscriber\nfb6f502 implement upgrade slots in ContainerUpgradeable with a loop rather than repeated if statements\na9e9a41 increase inscriber upgrade slots to 5\ne585ddf fix missed negation in inscriber inv changed\n17e4712 run the jei sync next server tick, instead of in the network thread\nd2b9d88 add setting for requiring items in the pattern terminal\n15cffb5 add craftable checking and straight up ghost item config in jei recipe sync packet\n51f657f move a few more packets to a server tick, to avoid risk of locking up the network thread\na98d6ca replace deprecated access of MinecraftForge.EVENT_BUS\na43ff2a finish upping inscriber upgrade limit & add ability for toolbox position to be changed to accommodate.\n8cb36c4 check all the jei recipe items for craftable, and move to after player inv check\n2c0607e add Chisel integration",
        "rv5-beta-5": "737d5f2 add client only annotation to addInformation in 1.11 too\n84c8fcb add dimension id to Spatial Storage Cell tooltip\n7f508f3 sort dense channel capacities before non-dense\n2582d0d minor optimisation to avoid a duplicate comparison/method call\n6c37224 Change Charger min extraction from the network to the min amount it will charge a device with, allow it to inject more power to the item if it has been delayed a few ticks, give charged certus an actual wait time (10 ticks) rather than a completely random \"simulation\"\nc995ebb Revert: add some stack overflow protection to the energy grid cache (reverted from commit 6b8b58d68ec8396fbf98868439f569b1066ed332)\nff519da use Linked list for EnergyGridCache seen stack\n7d30a74 Add jar signing scaffolding & fingerprint\n7486f45 Use Inscriber's container's validity checking, actually return the inscriber's item handler, & un-derp-ify its handling\nc353a27 revert changes to packet handling",
        "rv5-beta-6": "f7f58e3 add some null safety and a big warning to DriveBakedModel if the blockstate doesn't have the cell info.\n52ad49e fix container slot validity\n5524dd9 half way fix inscriber slot acceptance. Still need to check recipes for optional slots when other slot is not empty\ndd925f3 finish recipe awareness of slot validity in Inscriber\nd53c23f let upgrades be dragged into the slot\n525a312 fix logger formatting for drivebakedmodel\n1d7d8fc add logging for if we are unable to get the drive's TE",
        "rv5-beta-7": "776ba40 add BC & COFH wrench support back to the wrench and network tool\n04936f1 fix setting `Block.fullBlock`. Calling `isFullSize` in the AEBaseBlock constructor will _always_ return true as it is never overridden.\nb7515e1 mo' access transformery\n37641e2 compare NBT for SB expected change eating\n1b207d7 let isFullSize override isFullCube() - fixes tiny tnt shadow\n30400a8 change TE creation to Queued if cache",
        "rv5-beta-8": "05d8cdf fire block related code only if side is not null (ie when called from outside forces)\n5a6b684 fixed ME Pattern Terminal Dupe with MOVE_REGION\nf70175f check dimension type instead of the provider class to work around provider hijacking\n840aa20 only accept AE2 assets and non MRL model paths\n9340329 prevent any catchable error from failing the entire model loading process\n1e8539a fix formation plane block placement, move fake player creating to modulate block\n3329cea remove useless cache of fake players, Forge already caches them\n71ad19c allow JEI search box to change AL search when in synced mode\n83ed75c fix name press dupe (#66)",
        "rv5-beta-9": "231b6e1 Added SCS size to the Spatial IO Port. (#3045)\nb32c67d fix forgotten lang file entry still bearing parent project's name\nd86ec37 Update it_it.lang (#3041)\n8d93ad8 Making charged certus ore glow again (#3035)\n61e630f fix mek recipes to give the crystal, not the dust, as dust -> crystal is disabled by default\nf3d1142 WCT base\n64e1f72 actually log the packet exzception\n9ad58c0 WCT works\n52f2cf6 infinite range support for terminals with upgrade\n287218a baubles api\n187765a baubles for wireless teminals\n6f80071 centralise cap injection to prevent premature classloading\n1d9a562 bauble rendering\n64ce8df fix slot locking fail\ne313547 localisation for keybind"
    },
    "homepage": "https://github.com/thiakil/Applied-Energistics-2/releases",
    "promos": {
        "1.11.2-latest": "rv5-beta-10",
        "1.11.2-recommended": "rv5-beta-10"
    }
}